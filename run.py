#!/usr/bin/env python3
"""
Script para executar o bot Discord com verifica√ß√µes de depend√™ncias
"""

import sys
import subprocess
import os
from pathlib import Path

def check_python_version():
    """Verifica se a vers√£o do Python √© compat√≠vel"""
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8+ √© necess√°rio")
        sys.exit(1)
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} detectado")

def install_requirements():
    """Instala as depend√™ncias necess√°rias"""
    print("üì¶ Instalando depend√™ncias...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ Depend√™ncias instaladas com sucesso")
    except subprocess.CalledProcessError:
        print("‚ùå Erro ao instalar depend√™ncias")
        sys.exit(1)

def check_env_file():
    """Verifica se o arquivo .env existe e tem as vari√°veis necess√°rias"""
    env_path = Path(".env")
    
    if not env_path.exists():
        print("‚ùå Arquivo .env n√£o encontrado")
        print("üìù Criando arquivo .env de exemplo...")
        
        with open(".env", "w") as f:
            f.write("DISCORD_TOKEN=seu_token_do_discord_aqui\n")
            f.write("GEMINI_API_KEY=sua_chave_da_api_gemini_aqui\n")
        
        print("‚úÖ Arquivo .env criado. Configure suas chaves API antes de continuar.")
        return False
    
    # Verificar se as vari√°veis est√£o configuradas
    with open(".env", "r") as f:
        content = f.read()
        
    if "seu_token_do_discord_aqui" in content or "sua_chave_da_api_gemini_aqui" in content:
        print("‚ùå Configure suas chaves API no arquivo .env")
        return False
    
    print("‚úÖ Arquivo .env configurado")
    return True

def create_directories():
    """Cria diret√≥rios necess√°rios"""
    os.makedirs("screenshots", exist_ok=True)
    print("‚úÖ Diret√≥rios criados")

def main():
    """Fun√ß√£o principal"""
    print("ü§ñ Iniciando Bot Discord com IA Gemini")
    print("=" * 50)
    
    # Verifica√ß√µes
    check_python_version()
    
    # Instalar depend√™ncias
    install_requirements()
    
    # Verificar configura√ß√£o
    if not check_env_file():
        print("\nüìã Para configurar o bot:")
        print("1. Obtenha um token do Discord em: https://discord.com/developers/applications")
        print("2. Obtenha uma chave API do Gemini em: https://makersuite.google.com/app/apikey")
        print("3. Configure as chaves no arquivo .env")
        print("4. Execute novamente este script")
        return
    
    # Criar diret√≥rios
    create_directories()
    
    # Executar bot
    print("\nüöÄ Iniciando bot...")
    print("=" * 50)
    
    try:
        import bot
    except KeyboardInterrupt:
        print("\nüëã Bot encerrado pelo usu√°rio")
    except Exception as e:
        print(f"\n‚ùå Erro ao executar bot: {e}")

if __name__ == "__main__":
    main()